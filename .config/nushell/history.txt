ls
grep --help
ls
ls | grep down
ls | grep D
cls
clear
ls
mkdir ~/.cache/starship
starship init nu | save -f ~/.cache/starship/init.nu
use ~/.cache/starship/init.nu
ls
cls
clear
ls
$env
cls
clear
ls
filter --help
filter --help | less
filter --help
ls
ls | where name like nu
cd nushell/
ls
path
nvim .
nu.env-path
$nu.env-path
$nu.config-path
config
config env --default | nu-highlight | lines
config env --default | nu-highlight
config env --default
config nu
cls
$env
$env | first 1
$env
$env | less
aliases
scope aliases
config nu
$env
$env | less
ls
ls | where name like cache
ls | where name like .cache
ls | where name like .
ls | where name starts_with \.
ls | where name like ^\.
starship
starship init
starship init nu
config nu
cd nushell/
nvim .
cd rt
nvim .
type nu
nu
config nu
cd .config/nushell/
nvim .
ls
cd rt
cd ZIDE/rt_index/
hs
hl
cd ~/.config/nushell/
nvim .
cd ~/.config/nushell/
cd rt
z
z rt
z config
ls
cd nushell
nvim .
cd rt
ls
cls
ls
cls
ls
cd rt
python
echo $SHELL
echo $env.SHELL
cls
cd env
cd ~/.cargo/env
cd ~/.cargo/
nvim .
yazi
cls
nvim .bashrc
ls
cd rt
ls
ls | length
ls
cd ~
ls
ls -la
ls -la | where type == dif
ls -la | where type == dir
ls -la | where type == file
ls -la | select name type | where type == file
hl
cls
hs
hdiff
cls
http get https://jsonplaceholder.typicode.com/todos
http get https://jsonplaceholder.typicode.com/todos | to json
http get https://jsonplaceholder.typicode.com/todos | from json
http get https://jsonplaceholder.typicode.com/todos | to json | select title
http get https://jsonplaceholder.typicode.com/todos
http get https://jsonplaceholder.typicode.com/todos | select title completed | filter completed = true
http get https://jsonplaceholder.typicode.com/todos | select title completed | where completed = true
http get https://jsonplaceholder.typicode.com/todos | select title completed | where completed == true
env
cls
http get https://jsonplaceholder.typicode.com/todos | explore
explore --help
cd nu
nvim .
env nu
ls -la
shutdown now
curl https://google.com
curl https://www.google.com
cls
curl https://jsonplaceholder.typicode.com/posts
curl https://jsonplaceholder.typicode.com/posts | to json
curl https://jsonplaceholder.typicode.com/posts | from json
up
sudo apt install build-essential curl libffi-dev libffi8 libgmp-dev libgmp10 libncurses-dev pkg-config
ls
nvim .bashrc
curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh
ghcup tui
nvim .bashrc
ghcup tui
cls
cd personal
mkdir haskall-hello-world
cd haskall-hello-world/
touch hello.hs
nvim hello.hs
echo "main = putStrLn \"Hello World!\""
echo "main = putStrLn \"Hello World!\"" | save hello.hs
echo "main = putStrLn \"Hello World!\"" | save hello.hs -f
cat hello.hs
ghc hello.hs
sudo apt install build-essential curl libffi-dev libffi8 libgmp-dev libgmp10 libncurses-dev pkg-config
apt-cache policy libgmp-dev
sudo apt install build-essential curl libffi-dev libffi8 pkg-config
sudo apt install libgmp-dev libgmp10 libncurses-dev
up
sudo apt search libgmp-dev libgmp10 libncurses-dev
up
sudo apt update
grep ^ /etc/apt/sources.list /etc/apt/sources.list.d/*
add-apt-repository --help
add-apt-repository --list
exit
bash
cls
up
cd /etc/apt
ls
nvim .
up
sudo apt search libgmp-dev libgmp10 libncurses-dev
sudo apt install libgmp-dev libgmp10 libncurses-dev
cd has
l
ls
rm hello.hi hello.o
cat hello.hs
ghc hello.hs
ls
cat hello.hi
./hello
ghci --help
ghc hello.hs
./hello
ghc hello.hs
./hello
ghc hello.hs
./hello
ghc hello.hs
./hello
ghc hello.hs
./hello
ghc hello.hs
./hello
ghc hello.hs
./hello
ghc hello.hs
./hello
ghc hello.hs
./hello
ghc hello.hs
./hello
ghc hello.hs
./hello
ghc hello.hs
./hello
ghc hello.hs
./hello
ghc hello.hs
./hello
ghc hello.hs
./hello
cls
nvim .
cls
cd temp
ls
cd ../personal/
ls
cd sanad-main/
nvim .
ls
cls
http get https://jsonplaceholder.typicode.com/posts
http get https://jsonplaceholder.typicode.com/posts | where userId == 1
http get https://jsonplaceholder.typicode.com/posts | where userId == 1 | to json
http get https://jsonplaceholder.typicode.com/posts | where userId == 2 | to json
http get https://jsonplaceholder.typicode.com/posts | where userId == 3 | to json
http get https://jsonplaceholder.typicode.com/posts | where userId == 4 | length
http get https://jsonplaceholder.typicode.com/posts | where userId == 5 | length
http get https://jsonplaceholder.typicode.com/posts | where userId == 1 | limit 1
http get https://jsonplaceholder.typicode.com/posts | select title | where userId == 1 | first 5
http get https://jsonplaceholder.typicode.com/posts | where userId == 1 | sort-by title  | select title description | first 5
http get https://jsonplaceholder.typicode.com/posts | where userId == 1 | sort-by title  | select title body | first 5
cls
http get https://jsonplaceholder.typicode.com/posts | where userId == 1 | sort-by title  | select title body | first 5
ls 
ls | where type == file
ls | where type == file | each { |c| echo c }
ls | where type == file | each { |c| echo $c }
ls | where type == file | each { |c| echo $c.name }
ls | where type == file | where name like ^\.* |each { |c| echo $c.name }
ls | where type == file | where name like ^\.*
ls | where type == file | where name like ^\..*
ls
ls -la | where type == file | where name like ^\..*
ls -la | where type == file | where name like ^\.*
ls -la | where type == file | where name like ^\..*
ls -la | where type == file | where name like ^\..* | select name
ls -la | where type == file | where name like ^\..* | each { |file| wc -l $file.name}
ls -la | where type == file | where name like ^\..* | each { |file| wc -l $file}
ls -la | where type == file | where name like ^\..* | each { |file| wc -l $file.name}
wc
wc -l .wgetrc
ls -la | where type == file | where name like ^\..* | each { |file| wc -l $file.name}
cls
cd has
nvim .
shutdown now
cd rt
code .
hg pull --rebase -u
hg shelve
hg pull --rebase -u
hg shelve
hg unshelve
hg push
hg branch
cls
hg stat --help
cls
hg stat -m -r "default::SDPLIVE_RT_INDEX_BRANCH"
hg diff --help
hg diff -r default -r SDPLIVE_RT_INDEX_BRANCH
hg diff -r default -r SDPLIVE_RT_INDEX_BRANCH --template "{files}"
hg diff -r default -r SDPLIVE_RT_INDEX_BRANCH --template --stat
hg diff -r default -r SDPLIVE_RT_INDEX_BRANCH --stat
hg diff -r default -r SDPLIVE_RT_INDEX_BRANCH --stat | length
hg diff -r default -r SDPLIVE_RT_INDEX_BRANCH --stat
hg diff --help
hg diff -r default -r SDPLIVE_RT_INDEX_BRANCH --stat -p
hg diff -r default -r SDPLIVE_RT_INDEX_BRANCH --stat
hg diff -r default -r SDPLIVE_RT_INDEX_BRANCH product_package/conf/Asset/asset_template_facility_migration.xml
hg diff -r default -r SDPLIVE_RT_INDEX_BRANCH product_package/conf/Asset/asset_template_facility_migration.xml --anotate
hg diff -r default -r SDPLIVE_RT_INDEX_BRANCH product_package/conf/Asset/asset_template_facility_migration.xml
cls
hg diff -r default -r SDPLIVE_RT_INDEX_BRANCH product_package/conf/Asset/asset_template_facility_migration.xml --user
hg diff -r default -r SDPLIVE_RT_INDEX_BRANCH product_package/conf/Asset/asset_template_facility_migration.xml
hg diff -r default -r SDPLIVE_RT_INDEX_BRANCH
cd nu
nvim .
cd rt
cls
hl
cls
cd ~
ls
du -sh .
du -sh
du -sh .config/
du --help
du .config/
cls
ls
cd .config/
ls
rm -rf zed/
ls
rm -rf Joplin/
rm -rf joplin-desktop/
ls
ls | where name like jo
ls | where name like i
ls | where name like i3
rm -rf i3
ls
rm -rf tmux
lazygit
rm -rf lazygit/
ls
rm -rf kitty/
ls
rm -rf fish/
ls
ls | fist 5
ls | first 5
ls | skip 5 | first 5
ls | skip 10 | first 5
ls | skip 0 | first 5
rm -rf Code/
rm -rf `Code - Insiders/`
ls | skip 0 | first 5
ls | skip 5 | first 5
ls | skip 10 | first 5
ls | skip 11 | first 5
ls | skip 15 | first 5
ls | skip 20 | first 5
ls | skip 25 | first 5
gobang
gobang --help
cd gobang
ls
cd ..
gobang --help
cd gobang
nvim config.toml
gobang
nvim config.toml
gobang
nvim config.toml
gobang
type gobang
describe gobang
whereis gobang
cargo uninstall gobang 
gobang
cls
cd .confg
config
cd config
ls
cd gobang/
cd ..
rm -rf gobang/
ls
cls
cdiff 35e8b90c3f20
cd rt
cdiff 35e8b90c3f20
cdiff 9d3bcaa34ba7
cdiff 365fb6d55b70
cdiff 2cef4d82e8bb
cdiff 4b8d2d62c8a6
hl
cls
['jk']
{}
{ name: "jk" }
{ 'name': "jk" }
{ name: jk }
{ name: jk } | get name
cls
[jk, naveen, rizwan] | each { |name| echo $name }
[jk, naveen, rizwan] | each { |name| echo Hi $name }
[jk, naveen, rizwan] | each { |name| echo "Hi " + $name }
[jk, naveen, rizwan] | each { |name| echo "Hi " , $name }
[jk, naveen, rizwan] | each { |name| echo "Hi " . $name }
[jk, naveen, rizwan] | each { |name| echo 'Hi $name' }
[jk, naveen, rizwan] | each { |name| 'Hi ' + $name }
cls
hl
hg pull
cls
hg pull
hg update
cls
hl
cls
cdiff dab547b2abc6
cls
hl
hg pull
hg pull -u
hg update
cls
type cls
^type
cls
date noe
date now
start .hgignore
echo $EDITOR
echo $env.EDITOR
echo $env
$env
$env | where name like editor
$env
$env | grep EDITOR
cd settings
cd nushell
nvim .
nvim .
cls
cd settings
ls
cls
cd star
nvim .
java --version
nvim .
cls
ls
cls
cd rt
start .hgignore
echo $env.EDITOR
start .hgignore
sudo update-alternatives --config gnome-text-editor
sudo update-alternatives --config nvim
sudo update-alternatives --config editor
whereis nvim
which nvim
sudo update-alternatives --install /usr/bin/editor editor /snap/bin/nvim 1111
sudo update-alternatives --config editor
cls
start .hgignore
sudo update-alternatives --config x-terminal-emulator --list
sudo update-alternatives x-terminal-emulator --list
sudo update-alternatives --list x-terminal-emulator
sudo update-alternatives --config x-terminal-emulator
gsettings --help
gsettings get set org.gnome.desktop.default-applications.terminal
gsettings get org.gnome.desktop.default-applications.terminal
gsettings --help
gsettings list-keys | less
gsettings list-keys
gsettings set org.gnome.desktop.default-applications.terminal
gsettings set org.gnome.desktop.default-applications.terminal get
gsettings set org.gnome.desktop.default-applications.terminal KEY
gsettings set org.gnome.desktop.default-applications.terminal VALUE
gsettings get org.gnome.desktop.default-applications.terminal
gsettings
gsettings help get
gsettings list
gsettings list-schemas
gsettings list-schemas | to json
gsettings list-schemas | split '\n'
gsettings list-schemas | split
gsettings list-schemas | split row '\n'
gsettings list-schemas | split row '\n' 
gsettings list-schemas | split row '\n' | type
gsettings list-schemas | split row '\n' | describe
gsettings list-schemas | split row '\n' | filter {|row| row like terminal} 
gsettings list-schemas | split row '\n' | filter {|row| $row like terminal} 
gsettings list-schemas | split row '\n' | filter {|row| return $row like terminal} 
gsettings list-schemas | split row '\n' | filter {|row| $row like terminal} 
gsettings list-schemas | split row '\n' | filter {|row| $row like 'terminal'}
gsettings list-schemas | split row '\n' | filter {|row| $row contains 'terminal'}
gsettings list-schemas | split row '\n' | filter {|row| $row == 'terminal'}
gsettings list-schemas | split row '\n' | filter {|row| $row like 'terminal'}
gsettings list-schemas | split row '\n' | filter {|row| $row like 'default'}
gsettings list-schemas | split row '\n' | grep terminal
gsettings org.gnome.desktop.default-applications.terminal
gsettings org.gnome.desktop.default-applications.terminal list-keys
gsettings list-keys org.gnome.desktop.default-applications.terminal
gsettings org.gnome.desktop.default-applications.terminal get exec
gsettings get org.gnome.desktop.default-applications.terminal exec
gsettings get org.gnome.desktop.default-applications.terminal exec-arg
x-terminal-emulator 
which x-terminal-emulator
sudo update-alternatives --list x-terminal-emulator
sudo update-alternatives --config x-terminal-emulator
sudo update-alternatives --list x-terminal-emulator
sudo update-alternatives --config x-terminal-emulator
cls
ls
start .hgignore
open google.com
open "google.com"
cls
open .
start "google.com"
start https://google.com
start .
hg pull
hg update
cls
ls
cls
ls | select name
ls
start .
http delete https://jaya-21208.csez.zohocorpin.com:3000/app/itdesk/api/v3/requests/100000000000049315
http --help
cls
cl
scls
cls
ls
cls
mkdir config
cd config
cp ~/.bashrc .
ls
ls -la
sudo apt search stow
sudo apt install stow
brew install stow
sudo brew install stow
brew install stow
ls /home/linuxbrew/.linuxbrew/
ls -la /home/linuxbrew/.linuxbrew/
cd ..
ls
ls -ls
ls -ls | where name == .linuxbrew
ls -la | where name == .linuxbrew
ls -la | where name like brew
ls -l
ls -la
cd /home/linuxbrew/.linuxbrew/
ls
ls -ls
cd ..
ls
ks -ls
ks -la
ls -la
ls
cls
ls
cls
brew install stow
sudo chown -R $(whoami) /home/linuxbrew
whoami
sudo chown -R jaya-21208 /home/linuxbrew
echo "Hello $(echo 'World')"<\n>
brew install stow
find
find .
ls
find --help
cls
bash
stow --help
cd ~
cd config
ls
ls -la
mv ~/.bashrc ~/.bashrc.bak
git init
stow .
ls -la
cd ..
mv config/ dotfiles
cd dotfiles/
ls
ls -la
stow .
ls
ls
ls -la
git add .
git commit
log
cp ~/.config/wezterm/ .
cp -r ~/.config/wezterm/ .
ls
ls wezterm/
